Python Collections (Arrays)
There are four collection data types in the Python programming language:

List is a collection which is ordered and changeable. Allows duplicate members.
Tuple is a collection which is ordered and unchangeable. Allows duplicate members.
Set is a collection which is unordered and unindexed. No duplicate members.
Dictionary is a collection which is unordered, changeable and indexed. No duplicate members.
When choosing a collection type, it is useful to understand the properties of that type. Choosing the right type for a particular data set could mean retention of meaning, and, it could mean an increase in efficiency or security.

List
A list is a collection which is ordered and changeable. In Python lists are written with square brackets.
------------------------------------------------------------------------------------------------
'''
Created on 03-Nov-2018

@author: CHOTKA
'''
thislist = ["apple", "banana", "cherry"]
print(thislist)              #    ['apple', 'banana', 'cherry']
print(thislist[1])           #    banana

# To change the value of a specific item, refer to the index number:
# Change the second item:
thislist[1] = "blackcurrant"
print(thislist)     #   ['apple', 'blackcurrant', 'cherry']

thislist = ["apple", "banana", "cherry"]
for x in thislist:
  print(x)
'''  o/p
  apple
banana
cherry     '''
    
#   Check if Item Exists  To determine if a specified item is present in a list use the in keyword:

#   Check if "apple" is present in the list:

thislist = ["apple", "banana", "cherry"]
if "apple" in thislist:
  print("Yes, 'apple' is in the fruits list")   #    Yes, 'apple' is in the fruits list
  
print(len(thislist))     #    3
thislist.append("orange")
print(thislist)               #    ['apple', 'banana', 'cherry', 'orange']

thislist = ["apple", "banana", "cherry"]
print(thislist)               #     ['apple', 'banana', 'cherry']
thislist.insert(1, "orange")
print(thislist)               #   ['apple', 'orange', 'banana', 'cherry']
------------------------------------------------------------------------------------------------------------------------
#    Remove Item    There are several methods to remove items from a list:

thislist.remove("banana")
print(thislist)               ['apple', 'orange', 'cherry']

#The pop() method removes the specified index, (or the last item if index is not specified):

thislist1 = ["apple", "banana", "cherry"]
print(thislist1)         #    ['apple', 'banana', 'cherry']
print(thislist1.pop())   #    cherry
thislist1.pop()
print(thislist1)         #        ['apple']

#    The del keyword removes the specified index:

thislist = ["apple", "banana", "cherry"]
# print(del thislist[0])       compile time error
del thislist[0]
print(thislist)              #        ['banana', 'cherry']

#   The del keyword can also delete the list completely:

thislist = ["apple", "banana", "cherry"]
del thislist
print(thislist) #  this will cause an error because "thislist" no longer exists.
'''   below error will come
Traceback (most recent call last):
  File "E:\eclipse\python\corePython\CorePythonDemo\com\ctc\python\ListPython.py", line 21, in <module>
    print(thislist) #  this will cause an error because "thislist" no longer exists.
NameError: name 'thislist' is not defined    '''


#  The clear() method empties the list:

thislist = ["apple", "banana", "cherry"]
thislist.clear()
print(thislist)         #        []


#  It is also possible to use the list() constructor to make a list.   Using the list() constructor to make a List:

thislist = list(("apple", "banana", "cherry")) # note the double round-brackets
print(thislist)            #        ['apple', 'banana', 'cherry']

---------------------------------------------------------------------------------------------------------------------------------
List Methods
Python has a set of built-in methods that you can use on lists.

Method    Description
append()    Adds an element at the end of the list
clear()    Removes all the elements from the list
copy()    Returns a copy of the list
count()    Returns the number of elements with the specified value
extend()    Add the elements of a list (or any iterable), to the end of the current list
index()    Returns the index of the first element with the specified value
insert()    Adds an element at the specified position
pop()    Removes the element at the specified position
remove()    Removes the item with the specified value
reverse()    Reverses the order of the list
sort()    Sorts the list





